---
# tasks file for ec2-dynamic-inventory
- name: Create security groups for all applications 
  ec2_group: 
    name: "{{ item.sg_name }}" 
    description: "{{ item.sg_description }}" 
    region: "{{ region }}"
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
    rules: 
    - proto: "{{ item.sg_proto }}" 
      ports: "{{ item.sg_ports }}" 
      cidr_ip: "{{ item.sg_cidr_ip }}" 
  loop: "{{ deployment }}" 
 
- name: Boot ec2 instances 
  ec2: 
    count: "{{ item.count }}" 
    key_name: "{{ key_name }}" 
    aws_access_key: "{{ aws_access_key_id }}"
    aws_secret_key: "{{ aws_secret_access_key }}"
    region: "{{ region }}" 
    instance_type: m5.large 
    image: "{{ ami_id }}" 
    wait: yes 
    group: "{{ item.sg_name }}" 
    vpc_subnet_id: "{{ vpc_subnet_id }}" 
    assign_public_ip: yes 
    state: present 
    instance_tags: 
      type: "{{ item.tag }}" 
  loop: "{{ deployment }}" 
  register: ec2 
 
- name: Add new instance to a host group 
  add_host: 
    hostname: "{{ item.public_ip }}" 
    type: "{{ item.type }}" 
    instance_id: "{{ item.instance_id }}" 
    sg_id: "{{ item.sg_id }}" 
    groupname: launched 
    host_key_checking: False 
  loop: "{{ ec2.results| nested_lists }}"  
 
- name: Wait for SSH to come up 
  delegate_to: "{{ item.public_ip }}" 
  wait_for_connection: 
    delay: 15
    timeout: 60
  with_items: "{{ ec2.results | nested_lists }}" 
  vars: 
    ansible_user: "{{ _ansible_user }}"
    ansible_ssh_private_key_file: "{{ _ansible_ssh_private_key_file }}"
