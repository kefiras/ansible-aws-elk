---
- name: First
  hosts: all 
  connection: local
  vars: 
    aws_access_key_id: "{{ lookup('file', 'vars/credentials.yml') }}"
    aws_secret_access_key: "{{ lookup('file', 'vars/credentials.yml') }}"
    ansible_ssh_private_key_file: "/Users/wojtas/.ssh/aws-frankfurt.pem"
  environment:
    aws_access_key_id: "{{ aws_access_key_id }}"
    aws_secret_access_key: "{{ aws_secret_access_key }}"
# tasks file for elasticsearch
  tasks:
    - name:
      include_vars: defaults/main.yml

    - name: create security group
      ec2_group:
        name: sg_elasticsearch
        description: rule for elasticsearch
        rules:
        - proto: tcp
          ports:
          - 80
          - 22
          - 9200
          cidr_ip: 0.0.0.0/0
          rule_desc: allow ssh, http and es
    
    - name: boot ec2 instance
      ec2:
        count: 1
        key_name: "{{ key_name }}"
        region: "{{ region }}"
        instance_type: m5.large
        image: "{{ ami_id }}"
        wait: yes
        group: sg_elasticsearch
        vpc_subnet_id: "{{ vpc_subnet_id }}"
        assign_public_ip: yes
        state: present
        instance_tags:
          type: elasticsearch
          env: dev
      register: ec2
    
    - name: Add new instance to a host group
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: launched
        ansible_host_key_checking: false
        ansible_user: centos
        ansible_ssh_private_key_file: "/Users/wojtas/.ssh/aws-frankfurt.pem"
      with_items: "{{ ec2.instances }}" 

    - name: Wait for SSH to come up
      delegate_to: "{{ item.public_dns_name }}"
      wait_for_connection:
        delay: 30
        timeout: 320
      with_items: "{{ ec2.instances }}"
      vars:
        ansible_user: centos
    
- name: Install elasticsearch
  hosts: launched
  gather_facts: True
  become: True
  vars:
    ansible_ssh_private_key_file: "/Users/wojtas/.ssh/aws-frankfurt.pem"
    ansible_user: centos
    ansible_host_key_checking: false
  pre_tasks:
  - name:
    debug:
      msg: "{{ ansible_distribution }}"
  roles:
    - ansible-role-elasticsearch
    - ansible-role-java
  
